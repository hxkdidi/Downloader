<?xml version="1.0" encoding="utf-8"?>
<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <!--控件可以定义两个尺寸之间的比例，目前支持宽高比。
   前提条件是至少有一个尺寸设置为0dp，
   然后通过layout_constraintDimentionRatio属性设置宽高比。设置方式有以下几种：
   直接设置一个float值，表示宽高比
   以”width:height”形式设置
   通过设置前缀W或H，指定一边相对于另一边的尺寸，如”H, 16:9”，高比宽为16:9
   如果宽高都设置为0dp，也可以用ratio设置。这种情况下控件会在满足比例 约束的条件下，
   尽可能填满父布局。-->
    <!--
    app:layout_constraintLeft_toLeftOf="parent"
    app:layout_constraintRight_toRightOf="parent"
    设置了水平居中 会导致btn_2无法定位-->
    <!--发现不设置match_parent无法出现1：1-->
    <Button
        android:id="@+id/btn_1"
        android:layout_width="wrap_content"
        android:layout_height="0dp"
        android:layout_marginLeft="10dp"
        android:layout_marginTop="10dp"
        android:background="@color/colorAccent"
        android:text="宽高比设置为2:1"
        android:textColor="@color/permissionColorWhite"
        app:layout_constraintDimensionRatio="1:1"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <!--设置gone和visible不同状态下的属性-->

    <Button
        android:id="@+id/btn_2"
        android:layout_width="wrap_content"
        android:layout_height="0dp"
        android:layout_marginLeft="20dp"
        android:background="@color/permissionBgColorBlue"
        android:text="宽高比设置为2:1"
        android:textColor="@color/permissionColorWhite"
        app:layout_constraintDimensionRatio="0.5"
        app:layout_constraintLeft_toRightOf="@+id/btn_1" />

    <!--layout_constraintBaseline_toBaselineOf Baseline指的是文本基线，-->

    <Button
        android:id="@+id/btn_3"
        android:layout_width="wrap_content"
        android:layout_height="0dp"
        android:layout_marginLeft="10dp"
        android:background="@color/colorPrimary"
        android:text="设置文本基线"
        android:textColor="@color/permissionColorWhite"
        app:layout_constraintBaseline_toBaselineOf="@+id/btn_2"
        app:layout_constraintLeft_toRightOf="@+id/btn_2" />

    <!--根据角度布局 在btn_3的右下 135度的位置-->
    <Button
        android:id="@+id/btn_8"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@color/colorPrimary"
        android:text="根据角度布局"
        android:textColor="@color/permissionColorWhite"
        app:layout_constraintCircle="@+id/btn_3"
        app:layout_constraintCircleAngle="135"
        app:layout_constraintCircleRadius="80dp" />

    <!--将btn_5放在btn_2的内底部对齐-->
    <Button
        android:id="@+id/btn_6"
        android:layout_width="wrap_content"
        android:layout_height="0dp"
        android:background="@drawable/shape_btn_green_light"
        android:text="内底部对齐"
        android:textColor="@color/permissionColorWhite"
        app:layout_constraintBottom_toBottomOf="@+id/btn_2"
        app:layout_constraintEnd_toEndOf="@+id/btn_2" />

    <Button
        android:id="@+id/btn_4"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:background="@color/permissionColorGreen"
        android:text="宽高都设置为0dp，高宽比是9:3"
        android:textAllCaps="false"
        android:textColor="@color/permissionColorWhite"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintDimensionRatio="H,9:4"
        app:layout_constraintHorizontal_weight="1"

        app:layout_constraintTop_toBottomOf="@id/btn_2" />

    <Button
        android:id="@+id/btn_5"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:background="@color/colorPrimary"
        android:text="宽高都设置为0dp，高宽比是9:3"
        android:textAllCaps="false"
        android:textColor="@color/permissionColorWhite"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintDimensionRatio="W,1:4"
        app:layout_constraintHorizontal_bias="0.0"
        app:layout_constraintHorizontal_chainStyle="spread_inside"
        app:layout_constraintHorizontal_weight="1"
        app:layout_constraintLeft_toRightOf="@+id/btn_4"
        app:layout_constraintTop_toBottomOf="@id/btn_2"
        app:layout_constraintVertical_bias="0.0"
        tools:ignore="MissingConstraints" />
    <!--ratio
layout_constraintDimensionRatio，即宽和高成一定的比例，其值可以是"width:height"的形式，也可以是width/height的值。该属性生效的前提：宽和高其中有一项为0dp，有constraint。下面按照有几个0dp来分别介绍下：
如果只有一项为0dp，则该项值按照比例计算出来。比如高为20dp，宽为0dp，radio为"2:1",则最终宽为40dp
如果两项都为0dp，则尺寸会设置为满足约束的最大值并保持比例。因为这是系统计算的，有的时候不是我们想要的，我们也可以通过在前面加H、W来指定是哪一个边需要计算。例如"H,2:1",则是指宽度匹配约束，高度是宽度的1/2-->
    <Button
        android:id="@+id/btn_7"
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:background="@color/permissionBgColorGreenLight"
        android:text="宽高都设置为0dp，高宽比是3:1"
        android:textAllCaps="false"
        android:textColor="@color/permissionColorWhite"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintDimensionRatio="W,1:5"
        app:layout_constraintHorizontal_chainStyle="spread_inside"
        app:layout_constraintHorizontal_weight="1"
        app:layout_constraintLeft_toRightOf="@+id/btn_5"
        app:layout_constraintTop_toBottomOf="@id/btn_2" />

</android.support.constraint.ConstraintLayout>